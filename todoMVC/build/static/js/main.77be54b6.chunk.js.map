{"version":3,"sources":["config.js","components/ListItem.js","service/todoServices.js","model/storage.js","components/Fetch.js","containers/register.js","containers/statistic.js","containers/login.js","containers/TodoList.js","Auth.redux.js","footer.js","reducer.js","Dashbord.js","index.js"],"names":["global","targetUrl","ListItem","todoname","_id","this","props","deleteItem","completeTask","data","map","element","className","key","style","checked","status","onChange","bind","margin","textDecorationLine","color","type","icon","onClick","deleteTask","Component","deleteService","httpPost","then","response","json","console","log","code","catch","error","completeService","storage","set","value","localStorage","setItem","JSON","stringify","get","parse","getItem","remove","removeItem","url","fetch","method","mode","headers","body","paramsPostBody","obj","item","result","encodeURIComponent","slice","Register","state","form","username","password","checkPass","rules","required","message","trigger","min","validator","rule","callback","Error","refs","validateField","event","setState","target","e","preventDefault","validate","valid","MD5","history","push","alert","resetFields","Object","assign","Row","gutter","Col","span","offset","labelPosition","ref","model","labelWidth","Item","label","prop","autoComplete","handleSubmit","handleReset","Statistic","usercount","averageopentime","mydate","date","meanofOpenTime","placeholder","debug","Login","connect","auth","login","offline","token","isAuth","isOffline","to","textAlign","plain","TodoList","name","checkAll","isIndeterminate","notCompleteCount","list","inputVal","t1","Date","getTime","componentDidMount","temp","forEach","filter","index","length","todolist","openpagetime","header","indeterminate","handleCheckAllChange","handleChange","addTask","activeName","Pane","deleteCompleteItem","init","action","logout","clear","online","Footer","href","reducer","combineReducers","Dashbord","redirectToLogin","app","path","component","store","createStore","applyMiddleware","thunk","ReactDOM","render","theme","defaultActive","exact","document","getElementById"],"mappings":"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","file":"static/js/main.77be54b6.chunk.js","sourcesContent":["global.targetUrl = 'http://127.0.0.1:3001/';\r\n ","import React, { Component } from 'react'\r\nimport '../App.css'\r\nimport { Button, Checkbox } from 'element-react'\r\nimport 'element-theme-default'\r\n\r\nclass ListItem extends Component {\r\n  deleteTask (todoname, _id) {\r\n    this.props.deleteItem(todoname, _id)\r\n  }\r\n  completeTask (todoname, _id) {\r\n    this.props.completeTask(todoname, _id)\r\n  }\r\n  render () {\r\n    return (\r\n      <ul>\r\n        {\r\n          this.props.data.map(element => {\r\n            return (\r\n              <li className=\"listItem\" key={element.todoname}>\r\n                <span style={{ \"width\": \"100%\", \"textAlign\": \"left\" }}>\r\n                  <Checkbox checked={element.status === false}\r\n                    onChange={this.completeTask.bind(this, element.todoname, element._id)}>\r\n                    <span style={{\r\n                      margin: 20,\r\n                      textDecorationLine: element.status === true ? 'none' : 'line-through',\r\n                      color: element.status === true ? '#1F2D3D' : '#E5E9F2'\r\n                    }}> {element.todoname}\r\n                    </span>\r\n                  </Checkbox>\r\n                </span>\r\n                <span style={{ \"textAlign\": \"right\" }}>\r\n                  <Button type=\"text\" icon=\"delete\"\r\n                    onClick={this.deleteTask.bind(this, element.todoname, element._id)} />\r\n                </span>\r\n              </li>)\r\n          })\r\n        }\r\n      </ul>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ListItem","import { httpPost } from '../components/Fetch'\r\nimport '../config'\r\nexport function createtodoService (todoname, status) {\r\n    httpPost(global.targetUrl+'todos/create', {\r\n        todoname: todoname,\r\n        status: status\r\n    }).then((response) => {\r\n        return response.json()\r\n    }).then((data) => {\r\n        console.log(data)\r\n        if (data.code === 200) {\r\n            //   alert(\"新建任务成功\")\r\n        }\r\n    }).catch(function (error) {\r\n        console.log(error)\r\n    })\r\n}\r\n\r\nexport function deleteService (_id) {\r\n    httpPost(global.targetUrl+'todos/del', {\r\n        _id: _id,\r\n\r\n    }).then((response) => {\r\n        return response.json()\r\n    }).then((data) => {\r\n        console.log(data)\r\n        if (data.code === 200) {\r\n            // alert(\"删除任务成功\")\r\n        }\r\n    }).catch(function (error) {\r\n        console.log(error)\r\n    })\r\n}\r\n\r\nexport function deleteCompletedService () {\r\n    httpPost(global.targetUrl+'todos/delteCompleted').then((response) => {\r\n        return response.json()\r\n    }).then((data) => {\r\n        console.log(data)\r\n        if (data.code === 200) {\r\n\r\n            // alert(\"删除已完成任务成功\")\r\n        }\r\n    }).catch(function (error) {\r\n        console.log(error)\r\n    })\r\n}\r\n\r\n//完成任务，即切换任务状态\r\nexport function completeService (_id) {\r\n    httpPost(global.targetUrl+'todos/changeStatus', {\r\n        _id: _id,\r\n    }).then((response) => {\r\n        return response.json()\r\n    })\r\n}","\r\nvar storage={\r\n    set(key,value){\r\n        localStorage.setItem(key,JSON.stringify(value));\r\n    },\r\n    get(key){\r\n        return JSON.parse(localStorage.getItem(key));\r\n    },\r\n    remove(key){\r\n        localStorage.removeItem(key)\r\n    }\r\n};\r\n\r\nexport default storage;\r\n","import storage from '../model/storage'\r\n\r\n// 封装get请求\r\nexport function httpGet (url) {\r\n    var result = fetch(url)\r\n    return result\r\n}\r\n// 封装post请求\r\nexport function httpPost (url, data) {\r\n    var result = fetch(url, {\r\n        method: 'post',\r\n        mode: \"cors\",\r\n        headers: {\r\n            'Accept': 'application/json,text/plain,*/*',/* 格式限制：json、文本、其他格式 */\r\n            'Content-Type': 'application/x-www-form-urlencoded',/* 请求内容类型 */\r\n            'Authorization': \"Bearer \" + storage.get('token') // 从localStorageStorage中获取 token\r\n        },\r\n        //data表单数据，body最终要的格式为username=tony&pwd=123456，所以需要格式化\r\n        body: paramsPostBody(data)\r\n    })\r\n    return result\r\n}\r\n//格式化data\r\nfunction paramsPostBody (obj) {\r\n    var result = ''//接受最后结果\r\n    var item\r\n    for (item in obj) {\r\n        result += '&' + item + '=' + encodeURIComponent(obj[item])\r\n    }\r\n    if (result) {\r\n        result = result.slice(1)//去掉第一个&\r\n    }\r\n    return result\r\n} ","import React, { Component } from 'react'\r\nimport { Input, Card, Button, Layout, Form } from 'element-react'\r\nimport 'element-theme-default'\r\nimport { httpPost } from '../components/Fetch'\r\nimport MD5 from 'crypto-js/md5'\r\nimport '../config'\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            form: {\r\n                username: '',\r\n                password: '',\r\n                checkPass: ''\r\n            },\r\n            rules: {\r\n                password: [\r\n                    { required: true, message: '请输入密码', trigger: 'blur' },\r\n                    { min: 6, message: '密码长度不少于6', trigger: 'blur' },\r\n                    {\r\n                        validator: (rule, value, callback) => {\r\n                            if (value === '') {\r\n                                callback(new Error('请输入密码'))\r\n                            } else {\r\n                                if (this.state.form.checkPass !== '') {\r\n                                    this.refs.form.validateField('checkPass')\r\n                                }\r\n                                callback()\r\n                            }\r\n                        }\r\n                    }\r\n                ],\r\n                checkPass: [\r\n                    { required: true, message: '请再次输入密码', trigger: 'blur' },\r\n                    {\r\n                        validator: (rule, value, callback) => {\r\n                            if (value === '') {\r\n                                callback(new Error('请再次输入密码'))\r\n                            } else if (value !== this.state.form.password) {\r\n                                callback(new Error('两次输入密码不一致!'))\r\n                            } else {\r\n                                callback()\r\n                            }\r\n                        }\r\n                    }\r\n                ],\r\n                username: [\r\n                    {\r\n                        required: true, message: '请设置登录名',\r\n                        trigger: 'blur'\r\n                    },\r\n                    {\r\n                        min: 6, message: '登录名长度不少于6',\r\n                        trigger: 'blur'\r\n                    },\r\n                ]\r\n            }\r\n        }\r\n    }\r\n    handleUsername (event) { this.setState({ username: event.target.value }) }\r\n    handlePwd (event) { this.setState({ password: event.target.value }) }\r\n\r\n    handleSubmit (e) {\r\n        e.preventDefault()\r\n        this.refs.form.validate((valid) => {\r\n            if (valid) {\r\n                httpPost(global.targetUrl + 'users/register', {\r\n                    username: this.state.form.username,\r\n                    password: MD5(this.state.form.password)\r\n                }).then((response) => {\r\n                    return response.json()\r\n                }).then((data) => {\r\n                    console.log(data)\r\n                    if (data.code === 200) {\r\n                        this.props.history.push('/TodoList')\r\n                    }\r\n                    else {\r\n                        alert(data.message)\r\n                    }\r\n                }).catch(function (error) {\r\n                    console.log(error)\r\n                })\r\n            } else {\r\n                console.log('error submit!!')\r\n                return false\r\n            }\r\n        })\r\n    }\r\n\r\n    handleReset (e) {\r\n        e.preventDefault()\r\n        this.refs.form.resetFields()\r\n    }\r\n\r\n    onChange (key, value) {\r\n        this.setState({\r\n            form: Object.assign({}, this.state.form, { [key]: value })\r\n        })\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                <header className=\"header\">Register</header>\r\n                <Layout.Row gutter=\"20\">\r\n                    <Layout.Col span=\"8\" offset=\"8\">\r\n                        <Card>\r\n                            <div style={{ margin: 20 }}></div>\r\n                            <Form labelPosition='left' ref=\"form\" model={this.state.form} rules={this.state.rules} labelWidth=\"80\" >\r\n                                <Form.Item label=\"登录名\" prop=\"username\">\r\n                                    <Input value={this.state.form.username} onChange={this.onChange.bind(this, 'username')}></Input>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"密码\" prop=\"password\">\r\n                                    <Input type=\"password\" value={this.state.form.password} onChange={this.onChange.bind(this, 'password')} autoComplete=\"off\" />\r\n                                </Form.Item>\r\n                                <Form.Item label=\"确认密码\" prop=\"checkPass\">\r\n                                    <Input type=\"password\" value={this.state.form.checkPass} onChange={this.onChange.bind(this, 'checkPass')} autoComplete=\"off\" />\r\n                                </Form.Item>\r\n                                <Form.Item>\r\n                                    <Button type=\"primary\" onClick={this.handleSubmit.bind(this)}>注册</Button>\r\n                                    <Button onClick={this.handleReset.bind(this)}>重置</Button>   </Form.Item>\r\n                            </Form>\r\n                        </Card>\r\n                    </Layout.Col></Layout.Row><div style={{ margin: 20 }}>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register\r\n\r\n","import React, { Component } from 'react'\r\nimport { DatePicker, Button, Card, Layout } from 'element-react'\r\nimport 'element-theme-default'\r\nimport { httpPost } from '../components/Fetch'\r\nimport '../config'\r\nimport '../App.css'\r\n\r\nclass Statistic extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      usercount: 0,\r\n      averageopentime: 0,\r\n      mydate: null\r\n    }\r\n  }\r\n\r\n  handleSubmit (e) {\r\n    e.preventDefault()\r\n\r\n    //获取服务器数据\r\n    httpPost(global.targetUrl, {\r\n      date: this.state.mydate\r\n    })\r\n      .then((response) => {\r\n        return response.json()\r\n      }).then((data) => {\r\n        this.setState({\r\n          usercount: data.usercount,\r\n          averageopentime: data.meanofOpenTime,\r\n        })\r\n      }).catch(function (error) {\r\n        console.log(error)\r\n      })\r\n\r\n  }\r\n\r\n  render () {\r\n    const { mydate } = this.state\r\n    return (\r\n\r\n      <div className='App'>\r\n        <header className=\"header\">Statistic</header>\r\n        <Layout.Row gutter=\"20\">\r\n          <Layout.Col span=\"8\" offset=\"8\">\r\n            <Card className=\"box-card\">\r\n\r\n              <DatePicker\r\n                value={mydate}\r\n                placeholder=\"选择日期\"\r\n                onChange={date => {\r\n                  console.debug('DatePicker1 changed: ', date)\r\n                  this.setState({ mydate: date })\r\n                }}\r\n\r\n              />\r\n              <Button onClick={this.handleSubmit.bind(this)}>查询</Button>\r\n              <div style={{ margin: 20 }}></div>\r\n              <div>\r\n                活动用户数量：{this.state.usercount}</div>\r\n              <div>\r\n                平均页面加载时间：{this.state.averageopentime}毫秒</div>\r\n            </Card>\r\n          </Layout.Col>\r\n        </Layout.Row>\r\n        <div style={{ margin: 20 }}></div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Statistic","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Input, Card, Button, Layout, Form } from 'element-react'\r\nimport 'element-theme-default'\r\nimport { httpPost } from '../components/Fetch'\r\nimport MD5 from 'crypto-js/md5'\r\nimport { login, offline } from '../Auth.redux.js'\r\nimport { Redirect } from 'react-router-dom'\r\nimport storage from '../model/storage'\r\nimport '../config'\r\n@connect(\r\n    state => state.auth,\r\n    { login, offline }\r\n)\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            labelPosition: 'right',\r\n            form: {\r\n                username: '',\r\n                password: ''\r\n            },\r\n            rules: {\r\n                username: [\r\n                    {\r\n                        required: true, message: '请设置登录名',\r\n                        trigger: 'blur'\r\n                    }, {\r\n                        min: 6, message: '登录名长度不少于6',\r\n                        trigger: 'blur'\r\n                    },\r\n                ],\r\n                password: [\r\n                    {\r\n                        required: true, message: '请输入密码',\r\n                        trigger: 'blur'\r\n                    }, {\r\n                        min: 6, message: '密码长度不少于6',\r\n                        trigger: 'blur'\r\n                    },\r\n\r\n                ]\r\n            }\r\n        }\r\n    }\r\n\r\n    onPositionChange (value) {\r\n        this.setState({ labelPosition: value })\r\n    }\r\n\r\n    onChange (key, value) {\r\n        this.setState({\r\n            form: Object.assign(this.state.form, { [key]: value })\r\n        })\r\n    }\r\n\r\n    handleUsername (event) {\r\n        this.setState({ username: event.target.value })\r\n    }\r\n\r\n    handlePwd (event) {\r\n        this.setState({ password: event.target.value })\r\n    }\r\n\r\n    handleSubmit (e) {\r\n        e.preventDefault()\r\n        this.refs.form.validate((valid) => {\r\n            if (valid) {\r\n                httpPost(global.targetUrl + 'users/login', {\r\n                    username: this.state.form.username,\r\n                    password: MD5(this.state.form.password)\r\n                }).then((response) => {\r\n                    return response.json()\r\n                }).then((data) => {\r\n                    console.log(data)\r\n                    if (data.code === 200) {\r\n\r\n                        storage.set('token', data.token)\r\n                        this.props.login()\r\n                        // this.props.history.push('/TodoList')\r\n                    }\r\n                    else {\r\n                        alert(\"账户名或密码错误\")\r\n                    }\r\n                }).catch(function (error) {\r\n                    console.log(error)\r\n                })\r\n            } else {\r\n                console.log('error submit!!')\r\n                return false\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div >\r\n                {(this.props.isAuth || this.props.isOffline) ? <Redirect to='/Dashbord' /> : <header className=\"header\">Login</header>}\r\n                <Layout.Row gutter=\"20\">\r\n                    <Layout.Col span=\"8\" offset=\"8\">\r\n\r\n                        <Card>\r\n                            <div style={{ margin: 20 }}></div>\r\n                            <Form labelPosition='top' ref=\"form\" model={this.state.form} rules={this.state.rules} labelWidth=\"100\" className=\"demo-form-stacked\">\r\n                                <Form.Item label=\"登录名\" prop=\"username\">\r\n                                    <Input value={this.state.form.username} onChange={this.onChange.bind(this, 'username')}></Input>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"密码\" prop=\"password\">\r\n                                    <Input type=\"password\" value={this.state.form.password} onChange={this.onChange.bind(this, 'password')} autoComplete=\"off\" />\r\n                                </Form.Item>\r\n                                <Form.Item style={{ textAlign: \"center\" }}>\r\n                                    <Button onClick={this.handleSubmit.bind(this)}>登录</Button>\r\n                                    <Button plain={true} type=\"warning\" onClick={this.props.offline}>离线访问</Button>\r\n                                </Form.Item>\r\n                            </Form>\r\n\r\n                        </Card>\r\n                    </Layout.Col>\r\n                </Layout.Row>\r\n                <div style={{ margin: 20 }}></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login\r\n","import React, { Component } from 'react'\r\nimport '../App.css'\r\nimport ListItem from '../components/ListItem'\r\nimport storage from '../model/storage'\r\nimport { Button, Card, Checkbox, Layout, Tabs } from 'element-react'\r\nimport 'element-theme-default'\r\nimport { httpPost } from '../components/Fetch'\r\nimport { deleteService, completeService } from '../service/todoServices'\r\nimport '../config'\r\n//任务状态 未完成 true ;已完成false\r\nclass TodoList extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      name: 'tempList',\r\n      checkAll: false,\r\n      isIndeterminate: true,\r\n      notCompleteCount: 0,\r\n      list: [\r\n        {\r\n          todoname: '任务1', status: true\r\n        }\r\n      ],\r\n      inputVal: '',\r\n      t1: new Date().getTime()\r\n    }\r\n  }\r\n  //新建任务\r\n  addTask () {\r\n    if (!this.state.inputVal) return\r\n    httpPost(global.targetUrl + 'todos/create', {\r\n      todoname: this.state.inputVal,\r\n      status: true\r\n    }).then((response) => {\r\n      return response.json()\r\n    }).then((data) => {\r\n      console.log(data)\r\n      if (data.code === 200) {\r\n        this.componentDidMount()\r\n      }\r\n    }).catch(function (error) {\r\n      console.log(error)\r\n    })\r\n    this.setState({\r\n      list: [...this.state.list, {\r\n        todoname: this.state.inputVal,\r\n        status: true\r\n      }],\r\n      inputVal: ''\r\n    })\r\n    // 缓存数据\r\n    storage.set('todolist', [...this.state.list, {\r\n      todoname: this.state.inputVal,\r\n      status: true\r\n    }])\r\n\r\n  }\r\n\r\n  handleChange (e) {\r\n    this.setState({\r\n      inputVal: e.target.value\r\n    })\r\n  }\r\n\r\n  deleteItem (todoname, _id) {\r\n    //服务器删除任务\r\n    deleteService(_id)\r\n    const data = []\r\n    var temp = this.state.notCompleteCount\r\n    this.state.list.forEach((element) => {\r\n      if (element.todoname !== todoname) {\r\n        data.push(element)\r\n      } else {\r\n        if (element.status === false) { temp-- }\r\n      }\r\n    })\r\n    this.setState({\r\n      list: data,\r\n      notCompleteCount: temp\r\n    })\r\n    // 缓存数据\r\n    storage.set('todolist', data)\r\n    storage.set('notCompleteCount', temp)\r\n  }\r\n\r\n  deleteCompleteItem () {\r\n    const data = this.state.list.filter(element => element.status === true)\r\n    this.setState({\r\n      list: data,\r\n      notCompleteCount: 0\r\n    })\r\n    // 缓存数据\r\n    storage.set('todolist', data)\r\n    storage.set('notCompleteCount', 0)\r\n\r\n    httpPost(global.targetUrl + 'todos/delteCompleted').then((response) => {\r\n      return response.json()\r\n    }).then((data) => {\r\n      console.log(data)\r\n      if (data.code === 200) {\r\n        this.componentDidMount()\r\n      }\r\n    }).catch(function (error) {\r\n      console.log(error)\r\n    })\r\n  }\r\n\r\n  completeTask (todoname, _id) {\r\n    //服务\r\n    completeService(_id)\r\n    const TodoList = []\r\n    var temp = this.state.notCompleteCount\r\n    this.state.list.forEach((element, index) => {\r\n      if (element.todoname === todoname) {\r\n        const item = this.state.list[index]\r\n        TodoList.push(Object.assign({}, item, { status: item.status === true ? false : true }))\r\n        if (element.status === false) {\r\n          temp--\r\n        }\r\n        else {\r\n          temp++\r\n        }\r\n        this.setState({\r\n          list: TodoList,\r\n          notCompleteCount: temp\r\n        })\r\n      } else {\r\n        TodoList.push(element)\r\n      }\r\n    })\r\n    // 缓存数据\r\n    storage.set('todolist', TodoList)\r\n    storage.set('notCompleteCount', temp)\r\n  }\r\n\r\n  handleCheckAllChange (checked) {\r\n    const TodoList = []\r\n    this.state.list.forEach((element, index) => {\r\n      if (element.status === checked) {\r\n        completeService(element._id)\r\n      }\r\n      if (element.todoname !== \"\") {\r\n        const item = this.state.list[index]\r\n        TodoList.push(Object.assign({}, item, { status: checked === true ? false : true }))\r\n        this.setState({\r\n          list: TodoList,\r\n          isIndeterminate: false,\r\n          checkAll: checked,\r\n          notCompleteCount: checked === true ? TodoList.length : 0,\r\n        })\r\n      } else {\r\n        TodoList.push(element)\r\n      }\r\n    })\r\n    // 缓存数据\r\n    storage.set('todolist', TodoList)\r\n    storage.set('notCompleteCount', checked === true ? TodoList.length : 0)\r\n  }\r\n\r\n  //生命周期函数  页面加载就会触发\r\n  componentDidMount () {\r\n    //获取缓存的数据\r\n    var todolist = storage.get('todolist')\r\n    var notCompleteCount = storage.get('notCompleteCount')\r\n    if (todolist) {\r\n      //拿到缓存的数据 自动刷新\r\n      this.setState({\r\n        list: todolist,\r\n        notCompleteCount: notCompleteCount\r\n      })\r\n    }\r\n    //获取服务器数据\r\n    httpPost(global.targetUrl + 'todos/todoList', {\r\n      openpagetime: new Date().getTime() - this.state.t1\r\n    })\r\n      .then((response) => {\r\n        return response.json()\r\n      }).then((data) => {\r\n\r\n        var temp = 0\r\n        data.forEach((element) => {\r\n          if (element.status === false) {\r\n            temp++\r\n          }\r\n        })\r\n        this.setState({\r\n          list: data,\r\n          notCompleteCount: temp\r\n        })\r\n      }).catch(function (error) {\r\n        storage.remove(\"token\")\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  render () {\r\n\r\n    return (\r\n      <div className=\"reactTodoList\">\r\n        <header className=\"header\">todos</header>\r\n        <Layout.Row gutter=\"20\">\r\n          <Layout.Col span=\"8\" offset=\"8\">\r\n            <Card className=\"box-card\"\r\n              header={\r\n                <div className=\"clearfix\">\r\n                  <span style={{ \"lineHeight\": \"36px\" }}>\r\n                    <Checkbox\r\n                      checked={this.state.checkAll}\r\n                      indeterminate={this.state.isIndeterminate}\r\n                      onChange={this.handleCheckAllChange.bind(this)} />\r\n                    <input type=\"text\"\r\n                      value={this.state.inputVal}\r\n                      onChange={this.handleChange.bind(this)}\r\n                      placeholder=\"在此添加任务\" />\r\n                    <span style={{ \"textAlign\": \"right\" }}>\r\n                      <Button type=\"text\" icon=\"plus\" onClick={this.addTask.bind(this)} />\r\n                    </span>\r\n                  </span>\r\n                </div>\r\n              }\r\n            >\r\n              {\r\n                this.state.list.length > 0 &&\r\n                <div className=\"text item\">\r\n                  <Tabs activeName=\"1\">\r\n                    <Tabs.Pane label={<span>全部任务（{this.state.list.length}）</span>} name=\"1\">\r\n                      <ListItem data={this.state.list} deleteItem={this.deleteItem.bind(this)}\r\n                        completeTask={this.completeTask.bind(this)} />\r\n                    </Tabs.Pane>\r\n                    <Tabs.Pane label={<span>已完成（{this.state.notCompleteCount}）</span>} name=\"2\">\r\n                      <ListItem data={this.state.list.filter(element => element.status === false)}\r\n                        deleteItem={this.deleteItem.bind(this)}\r\n                        completeTask={this.completeTask.bind(this)} />\r\n                    </Tabs.Pane>\r\n                    <Tabs.Pane label={<span>待完成（{this.state.list.length - this.state.notCompleteCount}）</span>} name=\"3\">\r\n                      <ListItem data={this.state.list.filter(element => element.status === true)}\r\n                        deleteItem={this.deleteItem.bind(this)}\r\n                        completeTask={this.completeTask.bind(this)} />\r\n                    </Tabs.Pane>\r\n                  </Tabs>\r\n                  <span style={{ \"float\": \"right\" }}>\r\n                    {\r\n                      this.state.list.filter(element => element.status === false).length > 0 &&\r\n                      <Button type=\"text\" icon=\"delete\" onClick={this.deleteCompleteItem.bind(this)} >删除已完成项目</Button>\r\n                    }\r\n                  </span>\r\n                </div>\r\n              }\r\n            </Card>\r\n            <div className=\"small\">{\"加载本页耗时 \" + (new Date().getTime() - this.state.t1) + \" 毫秒\"}</div>\r\n          </Layout.Col>\r\n        </Layout.Row>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default TodoList","import { findAllByDisplayValue } from \"@testing-library/react\"\r\n\r\nconst LOGIN = 'LOGIN'\r\nconst LOGOUT = 'LOGOUT'\r\nconst OFFLINE = 'OFFLINE'\r\nconst ONLINE = 'ONLINE'\r\nconst init = {\r\n    isAuth: false,\r\n    isOffline: false \r\n}\r\n\r\n//reducer\r\nexport default function auth (state = init, action) {\r\n    console.log('auth.redux.js里的 state ： ' + JSON.stringify(state))\r\n    console.log('auth.redux.js里的 action ： ' + JSON.stringify(action))\r\n    switch (action.type) {\r\n        case LOGIN:\r\n            return { ...state, isAuth: true }\r\n        case LOGOUT:\r\n            return { ...state, isAuth: false }\r\n        case OFFLINE:\r\n            return { ...state, isOffline: true }\r\n        case ONLINE:\r\n            return { ...state, isOffline: false }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n//action\r\nexport function login () {\r\n    return { type: LOGIN }\r\n}\r\n\r\nexport function logout () {\r\n    //清空缓存 \r\n    localStorage.clear()\r\n    return { type: LOGOUT }\r\n}\r\nexport function offline () {\r\n    return { type: OFFLINE }\r\n}\r\n\r\nexport function online () {\r\n \r\n    return { type: ONLINE }\r\n}\r\n\r\n","import React from \"react\"\r\nimport 'element-theme-default'\r\nimport './index.css'\r\nexport default function Footer () {\r\n  return (\r\n    <footer>\r\n      <p>\r\n        Created by <a href=\"http://github.com/longyunyun/\" style={{ \"font\": \"12px  Extra ,Extra ,Small\", \"color\": \"#E5E9F2\" }}>Longyun</a>\r\n      </p>\r\n    </footer>\r\n  )\r\n}","\r\nimport {combineReducers} from 'redux';\r\nimport auth from './Auth.redux.js';\r\nlet reducer = combineReducers({\r\n\tauth: auth\r\n})\r\nexport default reducer;\r\n","import React, { Component } from 'react'\r\nimport { Button } from 'element-react'\r\nimport 'element-theme-default'\r\nimport { Route, Switch, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { login, logout,online} from './Auth.redux'\r\nimport TodoList from './containers/TodoList'\r\nimport storage from './model/storage'\r\nimport './App.css'\r\n@connect(\r\n    state => state.auth,\r\n    { login, logout,online }\r\n)\r\n\r\nclass Dashbord extends Component {\r\n \r\n    componentWillMount () {\r\n        \r\n        //有token即为已登录\r\n        var token = storage.get('token')\r\n        if (token) {\r\n            this.props.login()\r\n        }\r\n    }\r\n    render () {\r\n       \r\n        const redirectToLogin = <Redirect to='/Login'></Redirect>\r\n        const app = (\r\n            <div className=\"App\">\r\n                <Switch>\r\n                    <Route path='/Dashbord/' component={TodoList}></Route>\r\n                </Switch>\r\n                <div style={{ margin: 20 }}></div>\r\n\r\n\r\n                {this.props.isAuth ? <Button onClick={this.props.logout}>注销</Button> : null}\r\n                {this.props.isOffline ? <Button onClick={this.props.online}>退出离线访问</Button> : null}\r\n            </div>\r\n        )\r\n        return (this.props.isAuth||this.props.isOffline ) ? app : redirectToLogin\r\n    }\r\n}\r\nexport default Dashbord","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { createStore, applyMiddleware } from 'redux' // applyMiddleware 处理中间键\r\nimport thunk from 'redux-thunk'  // 中间键\r\nimport { Provider } from 'react-redux'\r\nimport { Menu } from 'element-react'\r\nimport 'element-theme-default'\r\nimport { HashRouter, Route, Link, Redirect, Switch } from 'react-router-dom'\r\nimport Register from './containers/register'\r\nimport Statistic from './containers/statistic'\r\nimport Footer from './footer'\r\nimport combineReducers from './reducer'  \r\n//分为登录页和主页  做权限校验\r\nimport Login from './containers/login'\r\nimport Dashbord from './Dashbord'\r\n\r\n\r\nconst store = createStore(combineReducers, applyMiddleware(thunk))\r\nReactDOM.render(\r\n  (\r\n    <Provider store={store}>\r\n      <HashRouter>\r\n        <Menu theme=\"dark\" defaultActive=\"1\" className=\"el-menu-demo\" mode=\"horizontal\" >\r\n          <Link to=\"/Login\"><Menu.Item index=\"1\">登录</Menu.Item></Link>\r\n          <Link to=\"/register\"> <Menu.Item index=\"2\">注册</Menu.Item></Link>\r\n          <Link to=\"/Dashbord\"> <Menu.Item index=\"3\">任务清单</Menu.Item></Link>\r\n          <Link to=\"/Statistic\"> <Menu.Item index=\"4\">使用情况统计</Menu.Item></Link>\r\n        </Menu>\r\n        <Switch>\r\n        <Route path=\"/Statistic\" component={Statistic}></Route>\r\n          <Route path=\"/register\" component={Register}></Route>\r\n          {/*只命中匹配上的第一个route*/}\r\n          <Route exact path='/Login' component={Login}></Route>\r\n          <Route path='/Dashbord' component={Dashbord}></Route>\r\n          <Redirect to='/Dashbord'></Redirect>\r\n        </Switch>\r\n      </HashRouter>\r\n      <Footer />\r\n    </Provider>\r\n  ),\r\n  document.getElementById('root'))"],"sourceRoot":""}