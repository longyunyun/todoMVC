{"version":3,"sources":["config.js","components/ListItem.js","service/todoServices.js","model/storage.js","containers/register.js","containers/login.js","containers/TodoList.js","components/Fetch.js","Auth.redux.js","footer.js","reducer.js","Dashbord.js","index.js"],"names":["global","targetUrl","ListItem","todoname","_id","this","props","deleteItem","completeTask","data","map","element","className","key","style","checked","status","onChange","bind","margin","textDecorationLine","color","type","icon","onClick","deleteTask","Component","deleteService","httpPost","then","response","json","console","log","code","catch","error","completeService","storage","set","value","localStorage","setItem","JSON","stringify","get","parse","getItem","remove","removeItem","Register","state","form","username","password","checkPass","rules","required","message","trigger","min","validator","rule","callback","Error","refs","validateField","event","setState","target","e","preventDefault","validate","valid","MD5","history","push","alert","resetFields","Object","assign","Row","gutter","Col","span","offset","labelPosition","ref","model","labelWidth","Item","label","prop","autoComplete","handleSubmit","handleReset","Login","connect","auth","login","token","isAuth","to","textAlign","TodoList","name","checkAll","isIndeterminate","notCompleteCount","list","inputVal","componentDidMount","temp","forEach","filter","index","item","length","todolist","header","indeterminate","handleCheckAllChange","handleChange","placeholder","addTask","activeName","Pane","deleteCompleteItem","url","fetch","method","mode","headers","body","paramsPostBody","obj","result","encodeURIComponent","slice","init","action","logout","clear","Footer","href","reducer","combineReducers","Dashbord","redirectToLogin","app","path","component","store","createStore","applyMiddleware","thunk","ReactDOM","render","theme","defaultActive","exact","document","getElementById"],"mappings":"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","file":"static/js/main.a1928634.chunk.js","sourcesContent":["global.targetUrl = 'http://localhost:3001/';\r\n ","import React, { Component } from 'react'\r\nimport '../App.css'\r\nimport { Button, Checkbox } from 'element-react'\r\nimport 'element-theme-default'\r\n\r\nclass ListItem extends Component {\r\n  deleteTask (todoname, _id) {\r\n    this.props.deleteItem(todoname, _id)\r\n  }\r\n  completeTask (todoname, _id) {\r\n    this.props.completeTask(todoname, _id)\r\n  }\r\n  render () {\r\n    return (\r\n      <ul>\r\n        {\r\n          this.props.data.map(element => {\r\n            return (\r\n              <li className=\"listItem\" key={element.todoname}>\r\n                <span style={{ \"width\": \"100%\", \"textAlign\": \"left\" }}>\r\n                  <Checkbox checked={element.status === false}\r\n                    onChange={this.completeTask.bind(this, element.todoname, element._id)}>\r\n                    <span style={{\r\n                      margin: 20,\r\n                      textDecorationLine: element.status === true ? 'none' : 'line-through',\r\n                      color: element.status === true ? '#1F2D3D' : '#E5E9F2'\r\n                    }}> {element.todoname}\r\n                    </span>\r\n                  </Checkbox>\r\n                </span>\r\n                <span style={{ \"textAlign\": \"right\" }}>\r\n                  <Button type=\"text\" icon=\"delete\"\r\n                    onClick={this.deleteTask.bind(this, element.todoname, element._id)} />\r\n                </span>\r\n              </li>)\r\n          })\r\n        }\r\n      </ul>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ListItem","import { httpPost } from '../components/Fetch'\r\nimport '../config'\r\nexport function createtodoService (todoname, status) {\r\n    httpPost(global.targetUrl+'todos/create', {\r\n        todoname: todoname,\r\n        status: status\r\n    }).then((response) => {\r\n        return response.json()\r\n    }).then((data) => {\r\n        console.log(data)\r\n        if (data.code === 200) {\r\n            //   alert(\"新建任务成功\")\r\n        }\r\n    }).catch(function (error) {\r\n        console.log(error)\r\n    })\r\n}\r\n\r\nexport function deleteService (_id) {\r\n    httpPost(global.targetUrl+'todos/del', {\r\n        _id: _id,\r\n\r\n    }).then((response) => {\r\n        return response.json()\r\n    }).then((data) => {\r\n        console.log(data)\r\n        if (data.code === 200) {\r\n            // alert(\"删除任务成功\")\r\n        }\r\n    }).catch(function (error) {\r\n        console.log(error)\r\n    })\r\n}\r\n\r\nexport function deleteCompletedService () {\r\n    httpPost(global.targetUrl+'todos/delteCompleted').then((response) => {\r\n        return response.json()\r\n    }).then((data) => {\r\n        console.log(data)\r\n        if (data.code === 200) {\r\n\r\n            // alert(\"删除已完成任务成功\")\r\n        }\r\n    }).catch(function (error) {\r\n        console.log(error)\r\n    })\r\n}\r\n\r\n//完成任务，即切换任务状态\r\nexport function completeService (_id) {\r\n    httpPost(global.targetUrl+'todos/changeStatus', {\r\n        _id: _id,\r\n    }).then((response) => {\r\n        return response.json()\r\n    })\r\n}","\r\nvar storage={\r\n    set(key,value){\r\n        localStorage.setItem(key,JSON.stringify(value));\r\n    },\r\n    get(key){\r\n        return JSON.parse(localStorage.getItem(key));\r\n    },\r\n    remove(key){\r\n        localStorage.removeItem(key)\r\n    }\r\n};\r\n\r\nexport default storage;\r\n","import React, { Component } from 'react'\r\nimport { Input, Card, Button, Layout, Form } from 'element-react'\r\nimport 'element-theme-default'\r\nimport { httpPost } from '../components/Fetch'\r\nimport MD5 from 'crypto-js/md5'\r\nimport '../config'\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            form: {\r\n                username: '',\r\n                password: '',\r\n                checkPass: ''\r\n            },\r\n            rules: {\r\n                password: [\r\n                    { required: true, message: '请输入密码', trigger: 'blur' },\r\n                    { min: 6, message: '密码长度不少于6', trigger: 'blur' },\r\n                    {\r\n                        validator: (rule, value, callback) => {\r\n                            if (value === '') {\r\n                                callback(new Error('请输入密码'))\r\n                            } else {\r\n                                if (this.state.form.checkPass !== '') {\r\n                                    this.refs.form.validateField('checkPass')\r\n                                }\r\n                                callback()\r\n                            }\r\n                        }\r\n                    }\r\n                ],\r\n                checkPass: [\r\n                    { required: true, message: '请再次输入密码', trigger: 'blur' },\r\n                    {\r\n                        validator: (rule, value, callback) => {\r\n                            if (value === '') {\r\n                                callback(new Error('请再次输入密码'))\r\n                            } else if (value !== this.state.form.password) {\r\n                                callback(new Error('两次输入密码不一致!'))\r\n                            } else {\r\n                                callback()\r\n                            }\r\n                        }\r\n                    }\r\n                ],\r\n                username: [\r\n                    {\r\n                        required: true, message: '请设置登录名',\r\n                        trigger: 'blur'\r\n                    }, \r\n                    {\r\n                        min: 6, message: '登录名长度不少于6',\r\n                        trigger: 'blur'\r\n                    },\r\n                ]\r\n            }\r\n        }\r\n    }\r\n    handleUsername (event) { this.setState({ username: event.target.value }) }\r\n    handlePwd (event) { this.setState({ password: event.target.value }) }\r\n\r\n    handleSubmit (e) {\r\n        e.preventDefault()\r\n        this.refs.form.validate((valid) => {\r\n            if (valid) {\r\n                httpPost(global.targetUrl+'users/register', {\r\n                    username: this.state.form.username,\r\n                    password: MD5(this.state.form.password)\r\n                }).then((response) => {\r\n                    return response.json()\r\n                }).then((data) => {\r\n                    console.log(data)\r\n                    if (data.code === 200) {\r\n                        this.props.history.push('/TodoList')\r\n                    }\r\n                    else {\r\n                        alert(data.message)\r\n                    }\r\n                }).catch(function (error) {\r\n                    console.log(error)\r\n                })\r\n            } else {\r\n                console.log('error submit!!')\r\n                return false\r\n            }\r\n        })\r\n    }\r\n\r\n    handleReset (e) {\r\n        e.preventDefault()\r\n        this.refs.form.resetFields()\r\n    }\r\n\r\n    onChange (key, value) {\r\n        this.setState({\r\n            form: Object.assign({}, this.state.form, { [key]: value })\r\n        })\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                <header className=\"header\">Register</header>\r\n                <Layout.Row gutter=\"20\">\r\n                    <Layout.Col span=\"8\" offset=\"8\">\r\n                        <Card>\r\n                            <div style={{ margin: 20 }}></div>\r\n                            <Form labelPosition='left' ref=\"form\" model={this.state.form} rules={this.state.rules} labelWidth=\"80\" >\r\n                                <Form.Item label=\"登录名\" prop=\"username\">\r\n                                    <Input value={this.state.form.username} onChange={this.onChange.bind(this, 'username')}></Input>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"密码\" prop=\"password\">\r\n                                    <Input type=\"password\" value={this.state.form.password} onChange={this.onChange.bind(this, 'password')} autoComplete=\"off\" />\r\n                                </Form.Item>\r\n                                <Form.Item label=\"确认密码\" prop=\"checkPass\">\r\n                                    <Input type=\"password\" value={this.state.form.checkPass} onChange={this.onChange.bind(this, 'checkPass')} autoComplete=\"off\" />\r\n                                </Form.Item>\r\n                                <Form.Item>\r\n                                    <Button type=\"primary\" onClick={this.handleSubmit.bind(this)}>注册</Button>\r\n                                    <Button onClick={this.handleReset.bind(this)}>重置</Button>   </Form.Item>\r\n                            </Form>\r\n                        </Card>\r\n                    </Layout.Col></Layout.Row><div style={{ margin: 20 }}>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Input, Card, Button, Layout, Form } from 'element-react'\r\nimport 'element-theme-default'\r\nimport { httpPost } from '../components/Fetch'\r\nimport MD5 from 'crypto-js/md5'\r\nimport { login } from '../Auth.redux.js'\r\nimport { Redirect } from 'react-router-dom'\r\nimport storage from '../model/storage'\r\nimport '../config'\r\n@connect(\r\n    state => state.auth,\r\n    { login }\r\n)\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            labelPosition: 'right',\r\n            form: {\r\n                username: '',\r\n                password: ''\r\n            },\r\n            rules: {\r\n                username: [\r\n                    {\r\n                        required: true, message: '请设置登录名',\r\n                        trigger: 'blur'\r\n                    }, {\r\n                        min: 6, message: '登录名长度不少于6',\r\n                        trigger: 'blur'\r\n                    },\r\n                ],\r\n                password: [\r\n                    {\r\n                        required: true, message: '请输入密码',\r\n                        trigger: 'blur'\r\n                    }, {\r\n                        min: 6, message: '密码长度不少于6',\r\n                        trigger: 'blur'\r\n                    },\r\n\r\n                ]\r\n            }\r\n        }\r\n    }\r\n\r\n    onPositionChange (value) {\r\n        this.setState({ labelPosition: value })\r\n    }\r\n\r\n    onChange (key, value) {\r\n        this.setState({\r\n            form: Object.assign(this.state.form, { [key]: value })\r\n        })\r\n    }\r\n\r\n    handleUsername (event) {\r\n        this.setState({ username: event.target.value })\r\n    }\r\n\r\n    handlePwd (event) {\r\n        this.setState({ password: event.target.value })\r\n    }\r\n\r\n    handleSubmit (e) {\r\n        e.preventDefault()\r\n        this.refs.form.validate((valid) => {\r\n            if (valid) {\r\n                httpPost(global.targetUrl+'users/login', {\r\n                    username: this.state.form.username,\r\n                    password: MD5(this.state.form.password)\r\n                }).then((response) => {\r\n                    return response.json()\r\n                }).then((data) => {\r\n                    console.log(data)\r\n                    if (data.code === 200) {\r\n\r\n                        storage.set('token', data.token)\r\n                        this.props.login()\r\n                        // this.props.history.push('/TodoList')\r\n                    }\r\n                    else {\r\n                        alert(\"账户名或密码错误\")\r\n                    }\r\n                }).catch(function (error) {\r\n                    console.log(error)\r\n                })\r\n            } else {\r\n                console.log('error submit!!')\r\n                return false\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div >\r\n                {this.props.isAuth ? <Redirect to='/Dashbord' /> : <header className=\"header\">Login</header>}\r\n                <Layout.Row gutter=\"20\">\r\n                    <Layout.Col span=\"8\" offset=\"8\">\r\n                        <p>hh{global.targetUrl}</p>\r\n                        <Card>\r\n                            <div style={{ margin: 20 }}></div>\r\n                            <Form labelPosition='top' ref=\"form\" model={this.state.form} rules={this.state.rules} labelWidth=\"100\" className=\"demo-form-stacked\">\r\n                                <Form.Item label=\"登录名\" prop=\"username\">\r\n                                    <Input value={this.state.form.username} onChange={this.onChange.bind(this, 'username')}></Input>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"密码\" prop=\"password\">\r\n                                    <Input type=\"password\" value={this.state.form.password} onChange={this.onChange.bind(this, 'password')} autoComplete=\"off\" />\r\n                                </Form.Item>\r\n                                <Form.Item style={{ textAlign: \"center\" }}>\r\n                                    <Button onClick={this.handleSubmit.bind(this)}>登录</Button>\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </Card>\r\n                    </Layout.Col>\r\n                </Layout.Row>\r\n                <div style={{ margin: 20 }}></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login\r\n","import React, { Component } from 'react'\r\nimport '../App.css'\r\nimport ListItem from '../components/ListItem'\r\nimport storage from '../model/storage'\r\nimport { Button, Card, Checkbox, Layout, Tabs } from 'element-react'\r\nimport 'element-theme-default'\r\nimport { httpPost } from '../components/Fetch'\r\nimport {  deleteService, completeService } from '../service/todoServices'\r\nimport '../config'\r\n//任务状态 未完成 true ;已完成false\r\nclass TodoList extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      name: 'tempList',\r\n      checkAll: false,\r\n      isIndeterminate: true,\r\n      notCompleteCount: 0,\r\n      list: [\r\n        {\r\n          todoname: '任务1', status: true\r\n        }\r\n      ],\r\n      inputVal: '',\r\n    }\r\n  }\r\n  //新建任务\r\n  addTask () {\r\n    if (!this.state.inputVal) return\r\n    httpPost(global.targetUrl+'todos/create', {\r\n      todoname: this.state.inputVal,\r\n      status: true\r\n    }).then((response) => {\r\n      return response.json()\r\n    }).then((data) => {\r\n      console.log(data)\r\n      if (data.code === 200) {\r\n        this.componentDidMount()\r\n      }\r\n    }).catch(function (error) {\r\n      console.log(error)\r\n    })\r\n    this.setState({\r\n      list: [...this.state.list, {\r\n        todoname: this.state.inputVal,\r\n        status: true\r\n      }],\r\n      inputVal: ''\r\n    })\r\n    // 缓存数据\r\n    storage.set('todolist', [...this.state.list, {\r\n      todoname: this.state.inputVal,\r\n      status: true\r\n    }])\r\n\r\n  }\r\n\r\n  handleChange (e) {\r\n    this.setState({\r\n      inputVal: e.target.value\r\n    })\r\n  }\r\n\r\n  deleteItem (todoname, _id) {\r\n    //服务器删除任务\r\n    deleteService(_id)\r\n    const data = []\r\n    var temp = this.state.notCompleteCount\r\n    this.state.list.forEach((element) => {\r\n      if (element.todoname !== todoname) {\r\n        data.push(element)\r\n      } else {\r\n        if (element.status === false) { temp-- }\r\n      }\r\n    })\r\n    this.setState({\r\n      list: data,\r\n      notCompleteCount: temp\r\n    })\r\n    // 缓存数据\r\n    storage.set('todolist', data)\r\n    storage.set('notCompleteCount', temp)\r\n  }\r\n\r\n  deleteCompleteItem () {\r\n    const data = this.state.list.filter(element => element.status === 0)\r\n    this.setState({\r\n      list: data,\r\n      notCompleteCount: 0\r\n    })\r\n    // 缓存数据\r\n    storage.set('todolist', data)\r\n    storage.set('notCompleteCount', 0)\r\n\r\n    httpPost(global.targetUrl+'todos/delteCompleted').then((response) => {\r\n      return response.json()\r\n    }).then((data) => {\r\n      console.log(data)\r\n      if (data.code === 200) {\r\n        this.componentDidMount()\r\n      }\r\n    }).catch(function (error) {\r\n      console.log(error)\r\n    })\r\n  }\r\n\r\n  completeTask (todoname, _id) {\r\n    //服务\r\n    completeService(_id)\r\n    const TodoList = []\r\n    var temp = this.state.notCompleteCount\r\n    this.state.list.forEach((element, index) => {\r\n      if (element.todoname === todoname) {\r\n        const item = this.state.list[index]\r\n        TodoList.push(Object.assign({}, item, { status: item.status === true ? false : true }))\r\n        if (element.status === false) {\r\n          temp--\r\n        }\r\n        else {\r\n          temp++\r\n        }\r\n        this.setState({\r\n          list: TodoList,\r\n          notCompleteCount: temp\r\n        })\r\n      } else {\r\n        TodoList.push(element)\r\n      }\r\n    })\r\n    // 缓存数据\r\n    storage.set('todolist', TodoList)\r\n    storage.set('notCompleteCount', temp)\r\n  }\r\n  handleCheckAllChange (checked) {\r\n    const TodoList = []\r\n    this.state.list.forEach((element, index) => {\r\n      if (element.todoname !== \"\") {\r\n        const item = this.state.list[index]\r\n        TodoList.push(Object.assign({}, item, { status: checked === true ? false : true }))\r\n        this.setState({\r\n          list: TodoList,\r\n          isIndeterminate: false,\r\n          checkAll: checked,\r\n          notCompleteCount: checked === true ? TodoList.length : 0,\r\n        })\r\n      } else {\r\n        TodoList.push(element)\r\n      }\r\n    })\r\n    // 缓存数据\r\n    storage.set('todolist', TodoList)\r\n    storage.set('notCompleteCount', checked === true ? TodoList.length : 0)\r\n  }\r\n\r\n  //生命周期函数  页面加载就会触发\r\n  componentDidMount () {\r\n    //获取缓存的数据\r\n    var todolist = storage.get('todolist')\r\n    var notCompleteCount = storage.get('notCompleteCount')\r\n    if (todolist) {\r\n      //拿到缓存的数据 自动刷新\r\n      this.setState({\r\n        list: todolist,\r\n        notCompleteCount: notCompleteCount\r\n      })\r\n    }\r\n    //获取服务器数据\r\n    httpPost(global.targetUrl+'todos/todoList')\r\n      .then((response) => {\r\n        return response.json()\r\n      }).then((data) => {\r\n\r\n        var temp = 0\r\n        data.forEach((element) => {\r\n          if (element.status === false) {\r\n            temp++\r\n          }\r\n        })\r\n        this.setState({\r\n          list: data,\r\n          notCompleteCount: temp\r\n        })\r\n      }).catch(function (error) {\r\n        storage.remove(\"token\")\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className=\"reactTodoList\">\r\n        <header className=\"header\">todos</header>\r\n        <Layout.Row gutter=\"20\">\r\n          <Layout.Col span=\"8\" offset=\"8\">\r\n            <Card className=\"box-card\"\r\n              header={\r\n                <div className=\"clearfix\">\r\n                  <span style={{ \"lineHeight\": \"36px\" }}>\r\n                    <Checkbox\r\n                      checked={this.state.checkAll}\r\n                      indeterminate={this.state.isIndeterminate}\r\n                      onChange={this.handleCheckAllChange.bind(this)} />\r\n                    <input type=\"text\"\r\n                      value={this.state.inputVal}\r\n                      onChange={this.handleChange.bind(this)}\r\n                      placeholder=\"在此添加任务\" />\r\n                    <span style={{ \"textAlign\": \"right\" }}>\r\n                      <Button type=\"text\" icon=\"plus\" onClick={this.addTask.bind(this)} />\r\n                    </span>\r\n                  </span>\r\n                </div>\r\n              }\r\n            >\r\n              {\r\n                this.state.list.length > 0 &&\r\n                <div className=\"text item\">\r\n                  <Tabs activeName=\"1\">\r\n                    <Tabs.Pane label={<span>全部任务（{this.state.list.length}）</span>} name=\"1\">\r\n                      <ListItem data={this.state.list} deleteItem={this.deleteItem.bind(this)}\r\n                        completeTask={this.completeTask.bind(this)} />\r\n                    </Tabs.Pane>\r\n                    <Tabs.Pane label={<span>已完成（{this.state.notCompleteCount}）</span>} name=\"2\">\r\n                      <ListItem data={this.state.list.filter(element => element.status === false)}\r\n                        deleteItem={this.deleteItem.bind(this)}\r\n                        completeTask={this.completeTask.bind(this)} />\r\n                    </Tabs.Pane>\r\n                    <Tabs.Pane label={<span>待完成（{this.state.list.length - this.state.notCompleteCount}）</span>} name=\"3\">\r\n                      <ListItem data={this.state.list.filter(element => element.status === true)}\r\n                        deleteItem={this.deleteItem.bind(this)}\r\n                        completeTask={this.completeTask.bind(this)} />\r\n                    </Tabs.Pane>\r\n                  </Tabs>\r\n                  <span style={{ \"float\": \"right\" }}>\r\n                    {\r\n                      this.state.list.filter(element => element.status === false).length > 0 &&\r\n                      <Button type=\"text\" icon=\"delete\" onClick={this.deleteCompleteItem.bind(this)} >删除已完成项目</Button>\r\n                    }\r\n                  </span>\r\n                </div>\r\n              }\r\n            </Card>\r\n          </Layout.Col>\r\n        </Layout.Row>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default TodoList","import storage from '../model/storage'\r\n\r\n// 封装get请求\r\nexport function httpGet (url) {\r\n    var result = fetch(url)\r\n    return result\r\n}\r\n// 封装post请求\r\nexport function httpPost (url, data) {\r\n    var result = fetch(url, {\r\n        method: 'post',\r\n        mode: \"cors\",\r\n        headers: {\r\n            'Accept': 'application/json,text/plain,*/*',/* 格式限制：json、文本、其他格式 */\r\n            'Content-Type': 'application/x-www-form-urlencoded',/* 请求内容类型 */\r\n            'Authorization': \"Bearer \" + storage.get('token') // 从localStorageStorage中获取 token\r\n        },\r\n        //data表单数据，body最终要的格式为username=tony&pwd=123456，所以需要格式化\r\n        body: paramsPostBody(data)\r\n    })\r\n    return result\r\n}\r\n//格式化data\r\nfunction paramsPostBody (obj) {\r\n    var result = ''//接受最后结果\r\n    var item\r\n    for (item in obj) {\r\n        result += '&' + item + '=' + encodeURIComponent(obj[item])\r\n    }\r\n    if (result) {\r\n        result = result.slice(1)//去掉第一个&\r\n    }\r\n    return result\r\n} ","const LOGIN = 'LOGIN'\r\nconst LOGOUT = 'LOGOUT'\r\n\r\nconst init = {\r\n    isAuth:false,\r\n}\r\n\r\n//reducer\r\nexport default function auth(state = init ,action){ \r\n    console.log('auth.redux.js里的 state ： ' + JSON.stringify(state))\r\n    console.log('auth.redux.js里的 action ： ' + JSON.stringify(action))\r\n    switch(action.type){\r\n        case LOGIN:\r\n            return {...state,isAuth:true}\r\n        case LOGOUT:\r\n          \r\n            return {...state,isAuth:false}\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n//action\r\nexport function login(){\r\n    return {type:LOGIN}\r\n}\r\n\r\nexport function logout(){\r\n      //清空缓存 \r\n      localStorage.clear()\r\n    return {type:LOGOUT}\r\n}\r\n\r\n\r\n","import React from \"react\"\r\nimport 'element-theme-default'\r\nimport './index.css'\r\nexport default function Footer () {\r\n  return (\r\n    <footer>\r\n      <p>\r\n        Created by <a href=\"http://github.com/longyunyun/\" style={{ \"font\": \"12px  Extra ,Extra ,Small\", \"color\": \"#E5E9F2\" }}>Longyun</a>\r\n      </p>\r\n    </footer>\r\n  )\r\n}","\r\nimport {combineReducers} from 'redux';\r\nimport auth from './Auth.redux.js';\r\nlet reducer = combineReducers({\r\n\tauth: auth\r\n})\r\nexport default reducer;\r\n","import React, { Component } from 'react'\r\nimport { Button } from 'element-react'\r\nimport 'element-theme-default'\r\nimport { Route, Switch, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { login, logout } from './Auth.redux'\r\nimport TodoList from './containers/TodoList'\r\nimport storage from './model/storage'\r\nimport './App.css'\r\n@connect(\r\n    state => state.auth,\r\n    { login, logout }\r\n)\r\n\r\nclass Dashbord extends Component {\r\n    componentWillMount () {\r\n        //有token即为已登录\r\n        var token = storage.get('token')\r\n        if (token) {\r\n            this.props.login()\r\n        }\r\n    }\r\n    render () {\r\n        const redirectToLogin = <Redirect to='/Login'></Redirect>\r\n        const app = (\r\n            <div className=\"App\">\r\n                <Switch>\r\n                    <Route path='/Dashbord/' component={TodoList}></Route>\r\n                </Switch>\r\n                <div style={{ margin: 20 }}></div>\r\n                {this.props.isAuth ? <Button onClick={this.props.logout}>注销</Button> : null}\r\n            </div>\r\n        )\r\n        return this.props.isAuth ? app : redirectToLogin\r\n    }\r\n}\r\nexport default Dashbord","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { createStore, applyMiddleware } from 'redux' // applyMiddleware 处理中间键\r\nimport thunk from 'redux-thunk'  // 中间键\r\nimport { Provider } from 'react-redux'\r\nimport { Menu } from 'element-react'\r\nimport 'element-theme-default'\r\nimport { BrowserRouter, Route, Link, Redirect, Switch } from 'react-router-dom'\r\n\r\nimport Register from './containers/register'\r\nimport Footer from './footer'\r\nimport combineReducers from './reducer'  \r\n//分为登录页和主页  做权限校验\r\nimport Login from './containers/login'\r\nimport Dashbord from './Dashbord'\r\n\r\n\r\nconst store = createStore(combineReducers, applyMiddleware(thunk))\r\nReactDOM.render(\r\n  (\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <Menu theme=\"dark\" defaultActive=\"1\" className=\"el-menu-demo\" mode=\"horizontal\" >\r\n          <Link to=\"/Login\"><Menu.Item index=\"1\">登录</Menu.Item></Link>\r\n          <Link to=\"/register\"> <Menu.Item index=\"2\">注册</Menu.Item></Link>\r\n          <Link to=\"/Dashbord\"> <Menu.Item index=\"3\">任务清单</Menu.Item></Link>\r\n        </Menu>\r\n        <Switch>\r\n          <Route path=\"/register\" component={Register}></Route>\r\n          {/*只命中匹配上的第一个route*/}\r\n          <Route exact path='/Login' component={Login}></Route>\r\n          <Route path='/Dashbord' component={Dashbord}></Route>\r\n          <Redirect to='/Dashbord'></Redirect>\r\n        </Switch>\r\n      </BrowserRouter>\r\n      <Footer />\r\n    </Provider>\r\n  ),\r\n  document.getElementById('root'))"],"sourceRoot":""}